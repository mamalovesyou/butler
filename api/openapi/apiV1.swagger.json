{
  "swagger": "2.0",
  "info": {
    "title": "api/proto/auth-service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "AuthService"
    },
    {
      "name": "ConnectorsService"
    },
    {
      "name": "WorkspaceService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/auth/refresh": {
      "post": {
        "operationId": "AuthService_RefreshToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1.AuthenticatedUser"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.RefreshRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/v1/auth/signin": {
      "post": {
        "operationId": "AuthService_SignIn",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1.AuthenticatedUser"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.SignInRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ],
        "security": []
      }
    },
    "/v1/auth/signout": {
      "post": {
        "operationId": "AuthService_SignOut",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.SignOutRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/v1/auth/signup": {
      "post": {
        "operationId": "AuthService_SignUp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1.AuthenticatedUser"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.SignUpRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ],
        "security": []
      }
    },
    "/v1/organizations": {
      "get": {
        "operationId": "WorkspaceService_ListOrganizations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1.OrganizationListResponse"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "tags": [
          "WorkspaceService"
        ]
      },
      "post": {
        "operationId": "WorkspaceService_CreateOrganization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1.OrganizationResponse"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.CreateOrganizationRequest"
            }
          }
        ],
        "tags": [
          "WorkspaceService"
        ]
      }
    },
    "/v1/workspaces": {
      "post": {
        "operationId": "WorkspaceService_CreateWorkspace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1.WorkspaceResponse"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.CreateWorkspaceRequest"
            }
          }
        ],
        "tags": [
          "WorkspaceService"
        ]
      }
    },
    "/v1/{workspaceId}/catalogs": {
      "get": {
        "operationId": "ConnectorsService_ListCatalogConnectors",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1.CatalogConnectorList"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ConnectorsService"
        ]
      }
    },
    "/v1/{workspaceId}/connectors": {
      "get": {
        "operationId": "ConnectorsService_ListWorkspaceConnectors",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1.WorkspaceConnectorList"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ConnectorsService"
        ]
      }
    },
    "/v1/{workspaceId}/connectors/oauth": {
      "post": {
        "operationId": "ConnectorsService_GetOauthConnectorAuthorization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1.WorkspaceConnector"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.OAuthAuthorizationRequest.ConnectorCode"
            }
          }
        ],
        "tags": [
          "ConnectorsService"
        ]
      }
    }
  },
  "definitions": {
    "google.protobuf.Any": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "google.rpc.Status": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          }
        }
      }
    },
    "v1.AuthenticatedUser": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v1.User"
        },
        "accessToken": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        }
      },
      "description": "The response message containing the User."
    },
    "v1.CatalogConnector": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "iconUrl": {
          "type": "string"
        },
        "authType": {
          "type": "string"
        },
        "authUrl": {
          "type": "string"
        }
      }
    },
    "v1.CatalogConnectorList": {
      "type": "object",
      "properties": {
        "connectors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1.CatalogConnector"
          }
        }
      }
    },
    "v1.CreateOrganizationRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "userRole": {
          "type": "string"
        }
      }
    },
    "v1.CreateWorkspaceRequest": {
      "type": "object",
      "properties": {
        "organizationID": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "v1.IsValidAccessTokenResponse": {
      "type": "object",
      "properties": {
        "userID": {
          "type": "string"
        }
      }
    },
    "v1.ListUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1.User"
          }
        }
      }
    },
    "v1.OAuthAuthorizationRequest.ConnectorCode": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "code": {
          "type": "string"
        }
      }
    },
    "v1.Organization": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "ownerID": {
          "type": "string"
        },
        "workspaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1.Workspace"
          }
        },
        "members": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1.UserMember"
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1.OrganizationListResponse": {
      "type": "object",
      "properties": {
        "organizations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1.Organization"
          }
        }
      }
    },
    "v1.OrganizationResponse": {
      "type": "object",
      "properties": {
        "organization": {
          "$ref": "#/definitions/v1.Organization"
        }
      }
    },
    "v1.RefreshRequest": {
      "type": "object",
      "properties": {
        "refreshToken": {
          "type": "string"
        }
      },
      "description": "The request message containing the refresh token."
    },
    "v1.SignInRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "title": "option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {\n   json_schema: {\n     title: \"SignIn\"\n     description: \"Intentionaly complicated message type to cover many features of Protobuf.\"\n     required: [\"email\", \"password\"]\n   }\n   example: \"{\\\"email\\\": \\\"john@heybutler.io\\\", \\\"password\\\": \\\"AStr0ngP@ssWord!\\\" }\"\n };"
        },
        "password": {
          "type": "string"
        }
      },
      "description": "The request message containing the email and password."
    },
    "v1.SignOutRequest": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        }
      },
      "description": "The request message containing the access token."
    },
    "v1.SignUpRequest": {
      "type": "object",
      "properties": {
        "lastName": {
          "type": "string",
          "title": "option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {\n   json_schema: {\n     title: \"SignUp\"\n     description: \"Welcome to BeyButler! We are glad you want to join us :)\"\n     required: [\"name\", \"email\", \"password\"]\n   }\n   example: \"{\\\"companyName\\\": \\\"Hey Butler Inc.\\\", \\\"firstName\\\": \\\"john\\\", \\\"lastName \\\": \\\"john\\\", \\\"email\\\": \\\"john@gobaboon.co\\\", \\\"password\\\": \\\"AStr0ngP@ssWord!\\\" }\"\n };"
        },
        "firstName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "companyName": {
          "type": "string"
        },
        "companyRole": {
          "type": "string"
        }
      },
      "description": "The request message containing the name, email and password."
    },
    "v1.User": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1.UserMember": {
      "type": "object",
      "properties": {
        "userID": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "role": {
          "type": "string"
        }
      }
    },
    "v1.Workspace": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "organizationID": {
          "type": "string"
        },
        "members": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1.UserMember"
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1.WorkspaceConnector": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "workspaceId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "expiresIn": {
          "type": "string",
          "format": "date-time"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1.WorkspaceConnectorList": {
      "type": "object",
      "properties": {
        "connectors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1.WorkspaceConnector"
          }
        }
      }
    },
    "v1.WorkspaceResponse": {
      "type": "object",
      "properties": {
        "workspace": {
          "$ref": "#/definitions/v1.Workspace"
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "description": "Authentication token, prefixed by Bearer: Bearer \u003ctoken\u003e",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}
