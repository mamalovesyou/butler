apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name}}-svc-octopus
  labels:
    app.kubernetes.io/name: service-octopus
    app.kubernetes.io/instance: {{ .Release.Name}}
    app.kubernetes.io/component: service
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: service-octopus
      app.kubernetes.io/instance: {{ .Release.Name}}
      app.kubernetes.io/component: service
      app.kubernetes.io/version: {{ .Chart.AppVersion }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: service-octopus
        app.kubernetes.io/instance: {{ .Release.Name}}
        app.kubernetes.io/component: service
        app.kubernetes.io/version: {{ .Chart.AppVersion }}
    spec:

      containers:
        - name: butler-svc-octopus
          image: "{{ .Values.image.repository }}/butler-octopus:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- $postgresHost := .Values.services.octopus.postgres.host | quote -}}
          {{ if .Values.services.octopus.postgres.external }}
          {{- $postgresHost = "octopus-postgres" -}}
          {{ end }}
          env:
            - name: PORT
              value: {{ .Values.services.octopus.port | quote }}
            - name: POSTGRES_HOST
              value: {{ $postgresHost }}
            - name: POSTGRES_NAME
              value: {{ .Values.services.octopus.postgres.name | quote }}
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-octopus-secrets
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-octopus-secrets
                  key: POSTGRES_PASSWORD
            {{- range $key, $val := .Values.commonEnv }}
            - name: {{ $key }}
              value: {{ $val | quote }}
            {{- end}}
            {{- range $key, $val := .Values.services.octopus.config.env }}
            - name: {{ $key }}
              value: {{ $val | quote }}
            {{- end}}
            {{- $releaseName := .Release.Name -}}
            {{- range $key, $val := .Values.services.octopus.config.secrets }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ $releaseName }}-octopus-secrets
                  key: {{ $key }}
            {{- end}}
          ports:
            - name: http
              containerPort: {{ default "5000" .Values.services.octopus.port }}
              protocol: TCP
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
          readinessProbe:
            exec:
              command: ["/grpc_health_probe", "-addr=:{{ default "5000" .Values.services.octopus.port }}"]
            initialDelaySeconds: 10
            failureThreshold: 3
          livenessProbe:
            exec:
              command: ["/grpc_health_probe", "-addr=:{{ default "5000" .Values.services.octopus.port }}"]
            initialDelaySeconds: 5
            failureThreshold: 3
            periodSeconds: 10
