on:
  pull_request:
    branches:
      - release

name: Build and Push images

jobs:
  version:
    runs-on: ubuntu-latest
    name: Set release tag version
    outputs:
      version: ${{ steps.vars.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set tag
        id: vars
        run: echo ::set-output name=version::${GITHUB_REF##*/}

  dashboard:
    needs: version
    runs-on: ubuntu-latest
    name: Build and Push Dashboard
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and tag butler-dashbaord
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO_NAME }}
          IMAGE_TAG: ${{ needs.version.outputs.version }}
        run: |
          echo $ECR_REGISTRY $ECR_REPOSITORY $IMAGE_TAG
          # Build a docker container and push it to ECR
          make ci.docker.dashboard

  release:
    needs: dashboard
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: ${{steps.github_release.outputs.changelog}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}