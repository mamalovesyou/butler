{
  "swagger": "2.0",
  "info": {
    "title": "google/api/http.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "UsersService"
    },
    {
      "name": "OctopusService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/connector": {
      "post": {
        "operationId": "OctopusService_ListWorkspaceConnectors",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1.WorkspaceConnectorList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.WorkspaceConnectorsRequest"
            }
          }
        ],
        "tags": [
          "OctopusService"
        ]
      }
    },
    "/v1/connector/catalog": {
      "get": {
        "operationId": "OctopusService_GetCatalogConnectors",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1.CatalogConnectorList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "tags": [
          "OctopusService"
        ]
      }
    },
    "/v1/connector/connect/oauth": {
      "post": {
        "operationId": "OctopusService_ConnectWithCode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1.WorkspaceConnector"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.ConnectWithCodeRequest"
            }
          }
        ],
        "tags": [
          "OctopusService"
        ]
      }
    },
    "/v1/connectors/accounts": {
      "post": {
        "operationId": "OctopusService_ListAccounts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1.ListAccountsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.ListAccountsRequest"
            }
          }
        ],
        "tags": [
          "OctopusService"
        ]
      }
    },
    "/v1/connectors/accounts/setup": {
      "post": {
        "operationId": "OctopusService_SelectAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1.WorkspaceConnector"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.SelectAccountRequest"
            }
          }
        ],
        "tags": [
          "OctopusService"
        ]
      }
    },
    "/v1/invitations": {
      "post": {
        "operationId": "UsersService_GetInvitation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1.Invitation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.GetInvitationRequest"
            }
          }
        ],
        "tags": [
          "UsersService"
        ]
      }
    },
    "/v1/invitations/send": {
      "post": {
        "operationId": "UsersService_SendBatchInvitations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1.InvitationListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.BatchInviteMemberRequest"
            }
          }
        ],
        "tags": [
          "UsersService"
        ]
      }
    },
    "/v1/organizations": {
      "get": {
        "summary": "Organization",
        "operationId": "UsersService_ListOrganizations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1.OrganizationListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "tags": [
          "UsersService"
        ]
      },
      "post": {
        "operationId": "UsersService_GetOrganization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1.OrganizationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.GetOrganizationRequest"
            }
          }
        ],
        "tags": [
          "UsersService"
        ]
      }
    },
    "/v1/organizations/create": {
      "post": {
        "operationId": "UsersService_CreateOrganization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1.OrganizationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.CreateOrganizationRequest"
            }
          }
        ],
        "tags": [
          "UsersService"
        ]
      }
    },
    "/v1/organizations/onboarding": {
      "post": {
        "operationId": "UsersService_CompleteOnboarding",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1.OrganizationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.CompleteOnboardingRequest"
            }
          }
        ],
        "tags": [
          "UsersService"
        ]
      }
    },
    "/v1/users/refresh": {
      "post": {
        "operationId": "UsersService_RefreshToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1.AuthenticatedUser"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.RefreshRequest"
            }
          }
        ],
        "tags": [
          "UsersService"
        ]
      }
    },
    "/v1/users/signin": {
      "post": {
        "summary": "Authentication",
        "operationId": "UsersService_SignIn",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1.AuthenticatedUser"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.SignInRequest"
            }
          }
        ],
        "tags": [
          "UsersService"
        ],
        "security": []
      }
    },
    "/v1/users/signout": {
      "post": {
        "operationId": "UsersService_SignOut",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.SignOutRequest"
            }
          }
        ],
        "tags": [
          "UsersService"
        ]
      }
    },
    "/v1/users/signup": {
      "post": {
        "operationId": "UsersService_SignUp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1.AuthenticatedUser"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.SignUpRequest"
            }
          }
        ],
        "tags": [
          "UsersService"
        ],
        "security": []
      }
    },
    "/v1/users/signup/invites": {
      "post": {
        "operationId": "UsersService_SignUpWithInvite",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1.AuthenticatedUser"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.SignUpWithInvitationRequest"
            }
          }
        ],
        "tags": [
          "UsersService"
        ],
        "security": []
      }
    },
    "/v1/workspaces": {
      "post": {
        "operationId": "UsersService_GetWorkspace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1.WorkspaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.GetWorkspaceRequest"
            }
          }
        ],
        "tags": [
          "UsersService"
        ]
      }
    },
    "/v1/workspaces/create": {
      "post": {
        "summary": "Workspace",
        "operationId": "UsersService_CreateWorkspace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1.WorkspaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.CreateWorkspaceRequest"
            }
          }
        ],
        "tags": [
          "UsersService"
        ]
      }
    }
  },
  "definitions": {
    "google.protobuf.Any": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "google.rpc.Status": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          }
        }
      }
    },
    "v1.AuthType": {
      "type": "string",
      "enum": [
        "OAUTH2",
        "API_KEY"
      ],
      "default": "OAUTH2"
    },
    "v1.AuthenticatedUser": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v1.User"
        },
        "accessToken": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        }
      },
      "description": "The response message containing the User."
    },
    "v1.BatchInviteMemberRequest": {
      "type": "object",
      "properties": {
        "emails": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "organizationId": {
          "type": "string"
        },
        "workspaceId": {
          "type": "string"
        }
      }
    },
    "v1.CatalogConnector": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "iconSvg": {
          "type": "string"
        },
        "authType": {
          "$ref": "#/definitions/v1.AuthType"
        },
        "authUrl": {
          "type": "string"
        }
      }
    },
    "v1.CatalogConnectorList": {
      "type": "object",
      "properties": {
        "connectors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1.CatalogConnector"
          }
        }
      }
    },
    "v1.CompleteOnboardingRequest": {
      "type": "object",
      "properties": {
        "organizationId": {
          "type": "string"
        }
      }
    },
    "v1.ConnectWithCodeRequest": {
      "type": "object",
      "properties": {
        "workspaceId": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        },
        "code": {
          "type": "string"
        }
      }
    },
    "v1.ConnectorSecret": {
      "type": "object",
      "properties": {
        "value": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1.ConnectorSecretPair": {
      "type": "object",
      "properties": {
        "connector": {
          "$ref": "#/definitions/v1.WorkspaceConnector"
        },
        "credentials": {
          "$ref": "#/definitions/v1.ConnectorSecret"
        }
      }
    },
    "v1.CreateOrganizationRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "userRole": {
          "type": "string"
        }
      }
    },
    "v1.CreateWorkspaceRequest": {
      "type": "object",
      "properties": {
        "organizationId": {
          "type": "string"
        },
        "workspace": {
          "$ref": "#/definitions/v1.CreateWorkspaceRequest.WorkspaceInfo"
        }
      }
    },
    "v1.CreateWorkspaceRequest.WorkspaceInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "v1.GetInvitationRequest": {
      "type": "object",
      "properties": {
        "invitationId": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "v1.GetOrganizationRequest": {
      "type": "object",
      "properties": {
        "organizationId": {
          "type": "string"
        }
      }
    },
    "v1.GetWorkspaceRequest": {
      "type": "object",
      "properties": {
        "workspaceId": {
          "type": "string"
        }
      }
    },
    "v1.Invitation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "organization": {
          "$ref": "#/definitions/v1.Organization"
        },
        "workspace": {
          "$ref": "#/definitions/v1.Workspace"
        },
        "expiresAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1.InvitationListResponse": {
      "type": "object",
      "properties": {
        "invitations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1.Invitation"
          }
        }
      }
    },
    "v1.ListAccountsRequest": {
      "type": "object",
      "properties": {
        "workspaceId": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        }
      }
    },
    "v1.ListAccountsResponse": {
      "type": "object",
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1.ProviderAccount"
          }
        }
      }
    },
    "v1.Organization": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "ownerId": {
          "type": "string"
        },
        "onboarded": {
          "type": "boolean"
        },
        "workspaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1.Workspace"
          }
        },
        "members": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1.UserMember"
          }
        },
        "invitations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1.Invitation"
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1.OrganizationListResponse": {
      "type": "object",
      "properties": {
        "organizations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1.Organization"
          }
        }
      }
    },
    "v1.OrganizationResponse": {
      "type": "object",
      "properties": {
        "organization": {
          "$ref": "#/definitions/v1.Organization"
        }
      }
    },
    "v1.ProviderAccount": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "test": {
          "type": "boolean"
        },
        "currency": {
          "type": "string"
        }
      }
    },
    "v1.RefreshRequest": {
      "type": "object",
      "properties": {
        "refreshToken": {
          "type": "string"
        }
      }
    },
    "v1.SelectAccountRequest": {
      "type": "object",
      "properties": {
        "workspaceConnectorId": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "accountName": {
          "type": "string"
        },
        "isTestAccount": {
          "type": "boolean"
        }
      }
    },
    "v1.SignInRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "v1.SignOutRequest": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        }
      }
    },
    "v1.SignUpRequest": {
      "type": "object",
      "properties": {
        "lastName": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "companyName": {
          "type": "string"
        },
        "companyRole": {
          "type": "string"
        }
      }
    },
    "v1.SignUpWithInvitationRequest": {
      "type": "object",
      "properties": {
        "lastName": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "invitationId": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "v1.User": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1.UserMember": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1.Workspace": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "organizationId": {
          "type": "string"
        },
        "members": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1.UserMember"
          }
        },
        "invitations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1.Invitation"
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1.WorkspaceConnector": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "workspaceId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "authScheme": {
          "$ref": "#/definitions/v1.AuthType"
        },
        "accountConfig": {
          "$ref": "#/definitions/v1.ProviderAccount"
        },
        "expiresIn": {
          "type": "string",
          "format": "date-time"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1.WorkspaceConnectorList": {
      "type": "object",
      "properties": {
        "connectors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1.WorkspaceConnector"
          }
        }
      }
    },
    "v1.WorkspaceConnectorsRequest": {
      "type": "object",
      "properties": {
        "workspaceId": {
          "type": "string"
        }
      }
    },
    "v1.WorkspaceResponse": {
      "type": "object",
      "properties": {
        "workspace": {
          "$ref": "#/definitions/v1.Workspace"
        }
      }
    }
  }
}
